# # # -*- coding: utf-8 -*-
#
# # Доступ к файлам с помощью модуля os
# #
# # ореn(<Путь к файлу>, <Режим>[, mode_Oo777])
# #
# # открывает файл и возвращает целочисле1mый
# # дескриmор, с помощью которого производится дальнейшая работа с файлом.
# # Если файл открыть не удалось, возбуждается исключение osError или одно из исключений,
# # являющихся подклассами класса OSError (мы поговорим о них в конце этой главы).
# # В параметре <Режим> в операционной системе Windows могут быть указаны следующие
# # флаги (или их комбинация через символ 1 ):
# # os. O_ ROONLY -чтение;
# # • os. O WRONLY -запись;
# # • os • O_ RDWR -чтение и запись;
# # • os. O_A.. -добавление в конец файла;
# # • os. O_C... -создать файл, если он не существует и если не указан флаг os. O_ EXCL;
# # • os.O_EXCL- при использовании совместно с os.O_CREATE указывает, что создаваемый
# # файл изначально не должен существовать, в противном случае будет сгенерировано
# # исключение FileExistsError;
# # • os. O_TЕМРОRАRУ - при использовании совместно с os. о_ CREAT указывает, что создается
# # временный файл, который будет автоматически удален сразу после закрытия;
# # • os.O_SHORT_LIVED-TO же самое, что os.O_TEMPORARY, но созданный файл по возмож-
# # ности будет храниться лишь в оперативной памяти, а не на диске;
# # • os. о_ TRUNC -очистить содержимое файла;
# # • os. о_ BINARY - файл будет открыт в бинарном режиме;
# # • os .о_ТЕХТ - файл будет открыт в текстовом режиме. В Windows файлы по умолчанию
# # открываются в текстовом режиме.

import os
print(os.name)               # Значение в ОС Windows 8
# 'nt'
#
mode = os.O_WRONLY | os.O_CREAT | os.O_TRUNC
f = os.open(r"file.txt", mode)
os.write(f, b"String1\n")  # Записываем данные
# 8
os.close(f)              # Закрываем файл
# # ######################################################################################################################
#
mode = os.O_WRONLY |  os.O_CREAT | os.O_APPEND
f = os.open(r"file.txt", mode)
os.write(f, b"String2\n") # Записываем данные
# 8
os.close(f)             # Закрываем файл
# # ######################################################################################################################

f = os.open(r"file.txt", os.O_RDONLY)
os.read(f, 50)            # Читаем 50 байт
# b'String1\nString2\n'
os.close(f)               # Закрываем файл
# # ######################################################################################################################
#
f = os.open(r"file.txt", os.O_RDONLY, os.O_BINARY)
os.read(f, 50)            # Читаем 50 байт
# # b'String1\r\nString2\r\n'
os.close(f)               # Закрываем файл
# # ######################################################################################################################
#
f = os.open(r"file.txt", os.O_RDONLY)
os.read(f, 5), os.read(f, 5), os.read(f, 5), os.read(f, 5)
# (b'Strin', b'g1\nS', b'tring', b'2\n')
# # ######################################################################################################################
os.read(f, 5)             # Достигнут конец файла
# b''
os.close(f)              # Закрываем файл
# # ######################################################################################################################
#
f = os.open(r"file.txt", os.O_RDONLY,  os.O_BINARY)
os.lseek(f, 0, os.SEEK_END)  # Перемещение в конец файла
# 18
os.lseek(f, 0, os.SEEK_SET)  # Перемещение в начало файла
# 0
os.lseek(f, 9, os.SEEK_CUR)  # Относительно указателя
# 9
os.lseek(f, 0, os.SEEK_CUR)  # Текущее положение указателя
# 9
os.close(f)                 # Закрываем файл
# # ######################################################################################################################
#
fd = os.open(r"file.txt", os.O_RDONLY)
print(fd)
# 3
f = os.fdopen(fd, "r")
f.fileno()  # Объект имеет тот же дескриптор
# 3
print(f.read())
'String1\nString2\n'
f.close()
# # ######################################################################################################################