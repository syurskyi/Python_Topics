class Solution:
    """
    @param: n: An integer
    @return: all amicable pairs
    """
    def amicablePair(self, n):
        ans = []
        if not n or n < 2:
            return ans

        for a in range(2, n + 1):
            b = self.get_factor_sum(a)
            if a < b <= n and self.get_factor_sum(b) == a:
                ans.append([a, b])

        return ans

    def get_factor_sum(self, a):
        """
        if `b` is a factor of `a`
        => `b` and `a // b` are both factor of `a`
        => only needs to check til `sqrt(a)`
        """
        _sum = 1
        _a = int(math.sqrt(a))

        for b in range(2, _a):
            if a % b == 0:
                _sum += b + a // b

        if _a * _a == a:
            _sum += _a

        return _sum
