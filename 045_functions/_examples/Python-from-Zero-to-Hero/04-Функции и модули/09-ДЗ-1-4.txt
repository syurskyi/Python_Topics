1. Кто выстрелил быстрее?

Два участника p1 и p2 участвуют в дуэли.

Напишите функцию whos_first, которая принимает две строки и возвращает имя игрока, который выстрелил первым.

Если игроки выстрелили одновременно, то вернуть строку "tie".

Примеры вызовов и возвратов:

whos_first(
 "   Bang!        ",
 "        Bang!   "
) ➞ "p1"
# p1 стреляет быстрее p2

whos_first(
 "               Bang! ",
 "             Bang!   "
) ➞ "p2"
# p2 стреляет быстрее p1

whos_first(
 "     Bang!   ",
 "     Bang!   "
) ➞ "tie"
# ничья

Примечание:

передаваемые строки - могут быть различной длины! (то есть содержать различное количество пробелов)

2. Ханойские башни

Есть три колышка.  Есть диски разного диаметра. Изначально N дисков упорядоченно надеты на первый колышек таким образом, что диск с наибольшим диаметром находится внизу, а с самым малом наверху. Цель - переместить с первого колышка все диски на третий колышек, сохранив на нём ту же (изначальную) упорядоченность. Для этого используется второй колышек. При перекладывании дисков между колышками есть важное правило: нельзя класть диск большего диаметра на диск с меньшим диаметром.

Саму механику игры программировать не надо - достаточно запрограммировать саму формулу подсчёта количества шагов.

Надо написать функцию solve_hanoi_tower, которая принимает количество дисков и возвращает минимальное кол-во ходов за которое можно решить задачу.

Примеры вызовов и возвратов

solve_hanoi_tower(3) ➞ 7
solve_hanoi_tower(5) ➞ 31
solve_hanoi_tower(0) ➞ 0

Передаются только положительные целые >= 0.

3. Без дуплетов!

Играем в кости. Правила следующие:

1. Кидаем пару костей.
2. Складываем количество выпавших чисел и прибавляем к общему кол-ву очков
3. Повторяем пункты 1 и 2 трижды.
4. Если выпадает дуплет (на обоих костях одно и то же число), то кол-во очков обнуляется и последующие броски не считаются.

Задание:

Напишите функцию calc_dice_scores принимающую список кортежей и, возвращающую общее кол-во очков.

Примеры вызовов и ожидаемый результат.

calc_dice_scores ([(1, 2), (3, 4), (5, 6)]) ➞ 21

calc_dice_scores ([(1, 1), (5, 6), (6, 4)]) ➞ 0

calc_dice_scores ([(4, 5), (4, 5), (4, 5)]) ➞ 27

Всегда передаются три кортежа по два элемента в каждом.

4. Мини-судоку

Напишите функцию any_duplicates, которая принимает двумерный массив размера 3х3 (9 элементов). Двумерный массив заполнен числами от 1 до 9.

Функция должна вернуть False, если в массиве все числа от 1 до 9 встречаются ровно один раз. В противном случае True. 

Примеры вызовов.

any_duplicates([[1, 3, 2], [9, 7, 8], [4, 5, 6]]) ➞ False
any_duplicates([[8, 9, 2], [5, 6, 1], [3, 7, 4]]) ➞ False
any_duplicates([[1, 1, 3], [6, 5, 4], [8, 7, 9]]) ➞ True # 1 дублируется
any_duplicates([[1, 2, 3], [3, 4, 5], [9, 8, 7]]) ➞ True # 3 дублируется